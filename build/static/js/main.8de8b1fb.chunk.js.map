{"version":3,"sources":["components/GenderContext.js","components/CustomerCard.js","components/NewCustomer.js","App.js","index.js"],"names":["ColorContext","createContext","ColorContextProvider","props","Provider","value","colors","female","male","other","children","usePrevious","ref","useRef","useEffect","current","CustomerCard","useState","edit","setEdit","firstname","setFirstname","lastname","setLastname","age","setAge","birthdayCard","setBirthdayCard","alert","useAlert","useContext","editFieldRef","editButtonRef","sendBCardBtnRef","closeBCardBtnRef","wasEditing","wasSendingBCard","borderColor","gender","handleDeleteBtn","dispatch","type","id","focus","editCustomer","className","htmlFor","name","onChange","e","target","min","max","role","onClick","error","showCustomer","style","NewCustomer","addCustomer","setAddCustomer","setGender","addCustomerBtnRef","inputCustomerRef","addedCustomer","newCustomerBtn","required","defaultValue","CUST_LIST","ErrorFallback","resetErrorBoundary","message","App","useReducer","customer","action","newCustomer","nanoid","filter","person","map","parseInt","Error","customerList","arr","len","chunks","i","n","length","push","slice","chunk","index","key","FallbackComponent","onReset","options","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","ReactDOM","render","StrictMode","template","AlertTemplate","document","getElementById"],"mappings":"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","file":"static/js/main.8de8b1fb.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\n\n//create the Context\nexport const ColorContext = createContext();\n\n//add data to the Provider and set the ContextProvider for other components\nconst ColorContextProvider = (props) => {\n  const colors = {\n    female: \"pink\",\n    male: \"blue\",\n    other: \"yellow\",\n  };\n  return (\n    <ColorContext.Provider\n      value={{\n        colors: colors,\n      }}\n    >\n      {props.children}\n    </ColorContext.Provider>\n  );\n};\nexport default ColorContextProvider;\n","import React, { useContext, useState, useRef, useEffect } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { ColorContext } from \"./GenderContext\";\n\nfunction usePrevious(value) {\n  /*\n   * function to get the previous value of a state\n   */\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function CustomerCard(props) {\n  const [edit, setEdit] = useState(false); //state to save value which view will be shown\n  const [firstname, setFirstname] = useState(props.firstname); //state of the controlled input component firstname\n  const [lastname, setLastname] = useState(props.lastname); //state of the controlled input component lastname\n  const [age, setAge] = useState(props.age); //state of the controlled input component age\n  const [birthdayCard, setBirthdayCard] = useState(false); //state to save value if a birthdayCard or just a send birthdaycard button is shown\n  const alert = useAlert(); //use alert lib to show an alert\n  const { colors } = useContext(ColorContext); //get the colors out of the Context ColorGender\n  const editFieldRef = useRef(null); //useRef to improve keyboard accessibility\n  const editButtonRef = useRef(null); //useRef to improve keyboard accessibility\n  const sendBCardBtnRef = useRef(null); //useRef to improve keyboard accessibility\n  const closeBCardBtnRef = useRef(null); //useRef to improve keyboard accessibility\n  const wasEditing = usePrevious(edit); //Previous value of edit\n  const wasSendingBCard = usePrevious(birthdayCard); ////Previous value of birthdayCard\n\n  const borderColor = {\n    /*\n     *define depending on the gender which border color for the card is used\n     */\n    borderColor:\n      props.gender === \"female\"\n        ? colors.female\n        : props.gender === \"male\"\n        ? colors.male\n        : colors.other,\n  };\n\n  useEffect(() => {\n    /*\n     *for keyboard accessibility focus is changed between first edit field and the edit button\n     */\n    if (!wasEditing && edit) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !edit) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, edit]);\n\n  useEffect(() => {\n    /*\n     *for keyboard accessibility focus is changed between close button of the bithday card the send birthday card button\n     */\n    if (!wasSendingBCard && birthdayCard) {\n      closeBCardBtnRef.current.focus();\n    }\n    if (wasSendingBCard && !birthdayCard) {\n      sendBCardBtnRef.current.focus();\n    }\n  }, [birthdayCard, wasSendingBCard]);\n\n  function handleSaveBtn() {\n    /*\n     * if an input field is empty, the form will not be submitted and an alert will be shown\n     * if all inputs are correct the changes of the customer via a reducer are suubmitted\n     */\n    if (firstname !== \"\" && lastname !== \"\" && age !== \"\") {\n      props.dispatch({\n        type: \"editCustomer\",\n        firstname: firstname,\n        lastname: lastname,\n        age: age,\n        id: props.id,\n      });\n      setEdit(false);\n    } else {\n      if (firstname === \"\" && lastname !== \"\" && age !== \"\") {\n        alert.error(\"Please enter your firstname!\");\n      } else if (lastname === \"\" && firstname !== \"\" && age !== \"\") {\n        alert.error(\"Please enter your lastname!\");\n      } else if (age === \"\" && lastname !== \"\" && firstname !== \"\") {\n        alert.error(\"Please enter your age!\");\n      } else if (firstname === \"\" && lastname === \"\" && age !== \"\") {\n        alert.error(\"Please enter your firstname and lastname!\");\n      } else if (firstname === \"\" && age === \"\" && lastname !== \"\") {\n        alert.error(\"Please enter your firstname and age!\");\n      } else if (age === \"\" && lastname === \"\" && firstname !== \"\") {\n        alert.error(\"Please enter your lastname and age!\");\n      } else if (firstname === \"\" && lastname === \"\" && age === \"\") {\n        alert.error(\"Please enter your firstname, lastname and age!\");\n      }\n    }\n  }\n\n  function handleEditBtn() {\n    /*\n     * sets the edit to true so the the edit function of the customer will be rendered\n     */\n    setEdit(true);\n  }\n\n  function handleDeleteBtn() {\n    /*\n     * calls the Reducer to delete this Customer\n     */\n    props.dispatch({ type: \"deleteCustomer\", id: props.id });\n  }\n\n  // functions to handle the controlled input\n  function handleFirstnameChange(e) {\n    setFirstname(e.target.value);\n  }\n\n  function handleLastnameChange(e) {\n    setLastname(e.target.value);\n  }\n\n  function handleAgeChange(e) {\n    setAge(e.target.value);\n  }\n\n  function handleBirthdayBtn() {\n    /*\n     * State BirthdayCard is set true and so a Birthday Card is rendered and the age of the customer is increased\n     */\n    setBirthdayCard(true);\n    props.dispatch({ type: \"sendBirthdayCard\", id: props.id });\n  }\n\n  function handleCloseBtn() {\n    /*\n     * State BirthdayCard is set false, so just the send birthday card button is displayed\n     */\n    setBirthdayCard(false);\n  }\n\n  //function to render the edit customer form\n  const editCustomer = (\n    <div className=\"card edit-customer\">\n      <div className=\"card-body\">\n        <div className=\"form-group row input-edit-name\">\n          <label htmlFor=\"firstname-edit\" className=\"col-lg-4 col-form-label\">\n            Firstname\n          </label>\n          <div className=\"col-lg-8 input-check\">\n            <input\n              type=\"text\"\n              id=\"firstname-edit\"\n              className=\"form-control form-control-sm\"\n              name=\"firstname\"\n              value={firstname}\n              onChange={handleFirstnameChange}\n              ref={editFieldRef}\n            ></input>\n          </div>\n        </div>\n        <div className=\"form-group row input-edit-name\">\n          <label htmlFor=\"lastname-edit\" className=\"col-lg-4 col-form-label\">\n            Lastname\n          </label>\n          <div className=\"col-lg-8 input-check\">\n            <input\n              type=\"text\"\n              id=\"lastname-edit\"\n              className=\"form-control form-control-sm\"\n              name=\"lastname\"\n              value={lastname}\n              onChange={handleLastnameChange}\n            ></input>\n          </div>\n        </div>\n        <div className=\"form-group row input-edit-age\">\n          <label htmlFor=\"age-edit\" className=\"col-lg-4 col-form-label\">\n            Age\n          </label>\n          <div className=\"col-lg-8 input-check\">\n            <input\n              type=\"number\"\n              id=\"age-edit\"\n              min=\"1\"\n              max=\"110\"\n              name=\"age\"\n              className=\"form-control form-control-sm\"\n              value={age}\n              onChange={handleAgeChange}\n            ></input>\n          </div>\n        </div>\n        <div className=\"btn-group\" role=\"group\">\n          <button\n            type=\"button\"\n            className=\"btn btn-light btn-sm\"\n            onClick={handleSaveBtn}\n          >\n            Save\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-light btn-sm\"\n            onClick={handleDeleteBtn}\n          >\n            Delete\n            <span className=\"visually-hidden\">\n              {props.firstname} {props.lastname}\n            </span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  //function to render the customer card\n  const showCustomer = (\n    <div className=\"card\" style={borderColor}>\n      <div className=\"card-body\">\n        <h2 className=\"card-title\">\n          {props.firstname} {props.lastname}\n        </h2>\n        <p className=\"card-text\">Age: {props.age}</p>\n        <div>\n          <button\n            className=\"btn btn-outline-dark btn-lg\"\n            type=\"button\"\n            onClick={handleBirthdayBtn}\n            ref={sendBCardBtnRef}\n          >\n            Send Birthday Card\n            <span className=\"visually-hidden\"> to Maren Meyer</span>\n          </button>\n        </div>\n        <div className=\"btn-group\" role=\"group\">\n          <button\n            type=\"button\"\n            className=\"btn btn-light btn-sm\"\n            onClick={handleEditBtn}\n            ref={editButtonRef}\n          >\n            Edit{\" \"}\n            <span className=\"visually-hidden\">\n              {props.firstname} {props.lastname}\n            </span>\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-light btn-sm\"\n            onClick={handleDeleteBtn}\n          >\n            Delete{\" \"}\n            <span className=\"visually-hidden\">\n              {props.firstname} {props.lastname}\n            </span>\n          </button>\n        </div>\n      </div>\n      {birthdayCard && (\n        <div className=\"birthdayCard-full\">\n          <div className=\"birthdayCard-body\">\n            <div className=\"birthdayCard-wish\">\n              <h2>Happy Birthday {props.firstname}</h2>\n              <p className=\"birthdaywish\">\n                The secret to staying young is lying about your age.\n              </p>\n              <p className=\"birthdayTextEnding\">Best wishes!</p>\n              <button\n                className=\"btn btn-outline-light btn-sm\"\n                onClick={handleCloseBtn}\n                ref={closeBCardBtnRef}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  //depending on the state edit a customer is shown or a editable customer form\n  return edit ? editCustomer : showCustomer;\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { useAlert } from \"react-alert\";\n\nfunction usePrevious(value) {\n  /*\n   * function to get the previous value of a state\n   */\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function NewCustomer(props) {\n  const [addCustomer, setAddCustomer] = useState(false); //state to save which view is shown: add Customerview or just a button\n  const [firstname, setFirstname] = useState(\"\"); //state of the controlled input component firstname\n  const [lastname, setLastname] = useState(\"\"); //state of the controlled input component lastname\n  const [age, setAge] = useState(\"\"); //state of the controlled input component age\n  const [gender, setGender] = useState(\"...\"); //state of the controlled input component gender\n  const alert = useAlert(); //use alert lib to show an alert\n  const addCustomerBtnRef = useRef(null); //useRef to improve keyboard accessibility\n  const inputCustomerRef = useRef(null); //useRef to improve keyboard accessibility\n  const addedCustomer = usePrevious(addCustomer); //Previous value of addCustomer\n\n  useEffect(() => {\n    /*\n     *for keyboard accessibility focus is changed between addCustomer Button and first input of the new customer form\n     */\n    if (!addedCustomer && addCustomer) {\n      inputCustomerRef.current.focus();\n    }\n    if (addedCustomer && !addCustomer) {\n      addCustomerBtnRef.current.focus();\n    }\n  }, [addedCustomer, addCustomer]);\n\n  function handleNewCustomerBtn() {\n    /*\n     *changes value of addCustomer so that the form for the new customer is rendered\n     */\n    setAddCustomer(true);\n  }\n\n  // function to handle controlled input\n  function handleFirstnameChange(e) {\n    setFirstname(e.target.value);\n  }\n\n  function handleLastnameChange(e) {\n    setLastname(e.target.value);\n  }\n\n  function handleAgeChange(e) {\n    setAge(e.target.value);\n  }\n\n  function handleGenderChange(e) {\n    setGender(e.target.value);\n  }\n\n  function handleSaveBtn() {\n    /*\n     * if an input field is empty, the form will not be submitted and an alert will be shown\n     */\n\n    if (firstname !== \"\" && lastname !== \"\" && age !== \"\") {\n      props.dispatch({\n        type: \"addCustomer\",\n        firstname: firstname,\n        lastname: lastname,\n        gender: gender,\n        age: age,\n      });\n      setAddCustomer(false);\n      setFirstname(\"\");\n      setLastname(\"\");\n      setGender(\"...\");\n      setAge(\"\");\n    } else {\n      if (firstname === \"\" && lastname !== \"\" && age !== \"\") {\n        alert.error(\"Please enter your firstname!\");\n      } else if (lastname === \"\" && firstname !== \"\" && age !== \"\") {\n        alert.error(\"Please enter your lastname!\");\n      } else if (age === \"\" && lastname !== \"\" && firstname !== \"\") {\n        alert.error(\"Please enter your age!\");\n      } else if (firstname === \"\" && lastname === \"\" && age !== \"\") {\n        alert.error(\"Please enter your firstname and lastname!\");\n      } else if (firstname === \"\" && age === \"\" && lastname !== \"\") {\n        alert.error(\"Please enter your firstname and age!\");\n      } else if (age === \"\" && lastname === \"\" && firstname !== \"\") {\n        alert.error(\"Please enter your lastname and age!\");\n      } else if (firstname === \"\" && lastname === \"\" && age === \"\") {\n        alert.error(\"Please enter your firstname, lastname and age!\");\n      }\n    }\n  }\n\n  function handleQuitBtn() {\n    /*\n     * sets the addCustomer to false so the the AddCostomer Button is rendered (no new Customer as added)\n     */\n    setAddCustomer(false);\n  }\n\n  //rendered new customer Button\n  const newCustomerBtn = (\n    <div className=\"new-customer-button\">\n      <button\n        type=\"button\"\n        className=\"btn btn-outline-dark btn-lg\"\n        onClick={handleNewCustomerBtn}\n        ref={addCustomerBtnRef}\n      >\n        New Customer\n      </button>\n    </div>\n  );\n\n  //rendered new customer form with inputfield for: firstname,secondname,age and gender\n  const newCustomerForm = (\n    <div className=\"new-customer-form\">\n      <div className=\"card\">\n        <div className=\"card-body-new-customer card-body\">\n          <div className=\"form-group row input-name\">\n            <label htmlFor=\"firstname-edit\" className=\"col-sm-3 col-form-label\">\n              Firstname\n            </label>\n            <div className=\"col-sm-9 input-check\">\n              <input\n                type=\"text\"\n                id=\"firstname-edit\"\n                name=\"firstname\"\n                className=\"form-control form-control-sm\"\n                value={firstname}\n                onChange={handleFirstnameChange}\n                ref={inputCustomerRef}\n                required\n              ></input>\n              <span className=\"validity\"></span>\n              <div className=\"invalid-feedback\">\n                Please enter your firstname!\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group row input-name\">\n            <label htmlFor=\"lastname-edit\" className=\"col-sm-3 col-form-label\">\n              Lastname\n            </label>\n            <div className=\"col-sm-9 input-check\">\n              <input\n                type=\"text\"\n                id=\"lastname-edit\"\n                name=\"lastname\"\n                className=\"form-control form-control-sm\"\n                value={lastname}\n                onChange={handleLastnameChange}\n                required\n              ></input>\n              <span className=\"validity\"></span>\n            </div>\n          </div>\n          <div className=\"form-group row input-gender\">\n            <label\n              htmlFor=\"gender-selection\"\n              className=\"col-sm-3 col-form-label\"\n            >\n              Gender\n            </label>\n            <div className=\"col-sm-9\">\n              <select\n                name=\"gender\"\n                id=\"gender-selection\"\n                className=\"form-control form-control-sm\"\n                onChange={handleGenderChange}\n                defaultValue=\"...\"\n                required\n              >\n                <option value=\"other\">...</option>\n                <option value=\"female\">Female</option>\n                <option value=\"male\">Male</option>\n                <option value=\"other\">Other</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"form-group row input-age\">\n            <label htmlFor=\"age-edit\" className=\"col-sm-3 col-form-label\">\n              Age\n            </label>\n            <div className=\"col-sm-9 input-check\">\n              <input\n                type=\"number\"\n                id=\"age-edit\"\n                min=\"1\"\n                max=\"110\"\n                name=\"age\"\n                value={age}\n                onChange={handleAgeChange}\n                className=\"form-control form-control-sm\"\n                required\n              ></input>\n              <span className=\"validity\"></span>\n            </div>\n          </div>\n          <div className=\"btn-group\" role=\"group\">\n            <button\n              type=\"button\"\n              className=\"btn btn-light btn-sm\"\n              onClick={handleSaveBtn}\n            >\n              Save\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-light btn-sm\"\n              onClick={handleQuitBtn}\n            >\n              Quit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  //depending in addCustomer the add customer button is shown or the add customer form\n  return addCustomer ? newCustomerForm : newCustomerBtn;\n}\n","import React, { useReducer } from \"react\";\nimport CustomerCard from \"./components/CustomerCard\";\nimport NewCustomer from \"./components/NewCustomer\";\nimport ColorContextProvider from \"./components/GenderContext\";\nimport { nanoid } from \"nanoid\";\nimport { ErrorBoundary } from \"react-error-boundary\";\n\n//Defaultlist of customers\nconst CUST_LIST = [\n  {\n    firstname: \"Harry\",\n    lastname: \"Potter\",\n    gender: \"male\",\n    age: \"30\",\n    id: \"1\",\n  },\n  {\n    firstname: \"Mary\",\n    lastname: \"Poppins\",\n    gender: \"female\",\n    age: \"45\",\n    id: \"2\",\n  },\n  {\n    firstname: \"Hermione\",\n    lastname: \"Granger\",\n    gender: \"female\",\n    age: \"30\",\n    id: \"3\",\n  },\n];\n\nfunction chunk(arr, len) {\n  /*\n   * Chunk any array in smaller array: arr --> Array, len: length of subarray\n   */\n  var chunks = [],\n    i = 0,\n    n = arr.length;\n  while (i < n) {\n    chunks.push(arr.slice(i, (i += len)));\n  }\n  return chunks;\n}\n\nfunction ErrorFallback({ error, resetErrorBoundary }) {\n  /*\n   * Fallback for all errors whch occur while rendering\n   */\n  return (\n    <div className=\"error-message\" role=\"alert\">\n      <h2>Something went wrong:</h2>\n      <pre>{error.message}</pre>\n      <button\n        className=\"btn btn-outline-dark btn-sm\"\n        onClick={resetErrorBoundary}\n      >\n        Try again\n      </button>\n    </div>\n  );\n}\n\nfunction App() {\n  const [customer, dispatch] = useReducer(actionsCustomerList, CUST_LIST); //global customerlist\n\n  const customerList = chunk(customer, 3).map((chunk, index) => {\n    /*\n     * function to create a card for each customer\n     */\n    return (\n      <div className=\"card-deck\" key={index}>\n        {chunk.map((person) => (\n          <CustomerCard\n            firstname={person.firstname}\n            lastname={person.lastname}\n            gender={person.gender}\n            age={person.age}\n            id={person.id}\n            key={person.id}\n            dispatch={dispatch}\n          />\n        ))}\n      </div>\n    );\n  });\n\n  function actionsCustomerList(customer, action) {\n    /*\n     * possible actions to the customerlist\n     */\n    switch (action.type) {\n      case \"addCustomer\":\n        const newCustomer = {\n          firstname: action.firstname,\n          lastname: action.lastname,\n          gender: action.gender,\n          age: action.age,\n          id: nanoid(),\n        };\n        return [...customer, newCustomer];\n      case \"deleteCustomer\":\n        return customer.filter((person) => person.id !== action.id);\n      case \"editCustomer\":\n        return customer.map((person) => {\n          if (person.id === action.id) {\n            return {\n              ...person,\n              firstname: action.firstname,\n              lastname: action.lastname,\n              age: action.age,\n            };\n          }\n          return person;\n        });\n      case \"sendBirthdayCard\":\n        return customer.map((person) => {\n          if (person.id === action.id) {\n            return { ...person, age: parseInt(person.age) + 1 };\n          }\n          return person;\n        });\n      default:\n        throw new Error(\"Action is not existing!\");\n    }\n  }\n\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback} onReset={() => {}}>\n      <ColorContextProvider>\n        <div className=\"App container\">\n          <header>\n            <h1 className=\"title-api\">Customer List</h1>\n            <h3 className=\"subtitle-api\">All you customers on one view!</h3>\n          </header>\n          {customerList}\n          <div className=\"new-customer\">\n            <NewCustomer dispatch={dispatch} />\n          </div>\n        </div>\n      </ColorContextProvider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nconst options = {\n  position: positions.BOTTOM_CENTER,\n  timeout: 5000,\n  offset: \"30px\",\n  transition: transitions.SCALE,\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <AlertProvider template={AlertTemplate} {...options}>\n      <App />\n    </AlertProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}